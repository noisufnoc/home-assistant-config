################################################################
## package / telegram
##  telegram bot 'noisufnoc emoh' configs
################################################################

################################################
## customize
################################################

homeassistant:
  customize:
    ################################################
    ## node anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'telegram'

      automation: &automation
        initial_state: true

################################################
## telegram
################################################

# Example configuration.yaml entry for the Telegram Bot
telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - !secret telegram_chat_id

# Example configuration.yaml entry for the notifier
notify:
  - name: noisufnoc_emoh
    platform: telegram
    chat_id: !secret telegram_chat_id

################################################
## group
################################################

group:
  telegram_bot:
    name: Telegram Bot - noisufnoc emoh
    entities:
      - automation.telegram__bot_callback__3dprinter
      - automation.telegram__bot_callback__prusa
      - automation.telegram__bot_command__args_test
      - automation.telegram__bot_command__guest_mode_toggle
      - automation.telegram__bot_command__temprature
      - automation.telegram__bot_command__weather
      - automation.telegram__notification__ashley_is_home
      - automation.telegram__notification__mike_is_home
      - automation.telegram__notification__home_assistant_shutdown
      - automation.telegram__notification__home_assistant_startup
      - automation.telegram__notification__home_assistant_update
      - automation.telegram__notification__notify_if_any_exterior_door_open_past_midnight
      - automation.telegram__notification__send_alert_when_dishwasher_is_clean
      - automation.telegram__notification__send_alert_when_washing_machine_is_clean
      - automation.telegram__notification__notify_when_3d_print_is_finished

################################################
### automation
#################################################

# Bot Commands

automation:
  - alias: "Telegram - Bot Command - guest mode toggle"
    <<: *automation
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: "/guest"
    action:
      - service: input_boolean.toggle
        data:
          entity_id: input_boolean.guest_mode
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'I have set Guest Mode to {{ states.input_boolean.guest_mode.state }}.'
          disable_notification: True

  - alias: "Telegram - Bot Command - temprature"
    <<: *automation
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: "/temp"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: "The average temprature in the house is currently {{ states.sensor.home_avg_temp.state }}Â°F"
          disable_notification: True

  - alias: "Telegram - Bot Command - weather"
    <<: *automation
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: "/weather"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: '{{ states.sensor.dark_sky_hourly_summary.state }}'
          disable_notification: True

  - alias: "Telegram - Bot Command - args test"
    <<: *automation
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/test'
        args:
          - 'arg'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'You tested the command with an arg!'
          disable_notification: True

# Bot Callbacks

  - alias: "Telegram - Bot Callback - prusa"
    <<: *automation
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        command: "/prusapower"
    action:
      - service: switch.toggle
        data:
          entity_id: switch.prusa_i3_mk3
      - delay: '00:00:05'
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'I have turned the Prusa i3 MK3 Printer {{ states("switch.prusa_i3_mk3") }}.'
          disable_notification: True

  - alias: "Telegram - Bot Callback - 3dprinter"
    <<: *automation
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        command: "/3dprinter"
    action:
      - service: switch.toggle
        data:
          entity_id: switch.3d_printer_power
      - delay: '00:00:05'
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'I have turned the 3D Printer.'
          #message: 'I have turned the 3D Printer {{ states("switch.3d_printer_power") }}.'
          disable_notification: True

# Notifications
# Emojii Unicode - https://apps.timwhitlock.info/emoji/tables/unicode

  - alias: 'Telegram - Notification - Ashley is home'
    <<: *automation
    trigger:
        platform: state
        entity_id: device_tracker.ashley_pixel
        from: not_home
        to: home
    action:
      - service: notify.noisufnoc_emoh
        data:
          message: "Ashley is home! \ud83d\ude0d"
 
  - alias: 'Telegram - Notification - Mike is home'
    <<: *automation
    trigger:
        platform: state
        entity_id: device_tracker.mike_taimen
        from: not_home
        to: home
    action:
      - service: notify.noisufnoc_emoh
        data:
          message: "Mike is home, yay!"

  - alias: 'Telegram - Notification - Home Assistant Startup'
    <<: *automation
    trigger:
      - platform: homeassistant
        event: start
    action:
      service: notify.noisufnoc_emoh
      data:
        message: "Home Assistant Started"

  - alias: 'Telegram - Notification - Home Assistant Shutdown' 
    <<: *automation
    trigger:
      - platform: homeassistant
        event: shutdown
    action:
      service: notify.noisufnoc_emoh
      data:
        message: "Home Assistant Shutdown"

  - alias: 'Telegram - Notification - Home Assistant Update'
    <<: *automation
    trigger:
      - platform: state
        entity_id: updater.updater
    action:
      service: notify.noisufnoc_emoh
      data_template: 
        message: "Home Assistant {{ states.updater.updater.state }} is now available."

  - alias: 'Telegram - Notification - Send alert when dishwasher is clean'
    <<: *automation
    trigger:
      - platform: state
        entity_id: input_select.dishwasher_status
        to: Clean
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.dishwasher_status
          state: Clean
    action:
      - service: notify.noisufnoc_emoh
        data:
          message: 'The Dishwasher is clean!'

  - alias: 'Telegram - Notification - Send alert when washing machine is clean'
    <<: *automation
    trigger:
      - platform: state
        entity_id: input_select.washing_machine_status
        to: Clean
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.washing_machine_status
          state: Clean
    action:
      - service: notify.noisufnoc_emoh
        data:
          message: 'The washing machine has finished and is ready to be emptied!'

  - alias: 'Telegram - Notification - Notify if any exterior door open past midnight'
    <<: *automation
    trigger:
      - platform: time
        at: '00:00:00'
    condition:
      condition: state
      entity_id: 'group.exterior_doors'
      state: 'on'
    action:
      - service: notify.noisufnoc_emoh
        data:
          message: "You left a damn door open!"

  - alias: 'Telegram - Notification - Notify when 3d print is finished'
    <<: *automation
    trigger:
      - platform: numeric_state
        entity_id: sensor.prusa_i3_mk3_job_percentage
        value_template: '{{states.sensor.prusa_i3_mk3_job_percentage.state | int }}'
        above: 99
    action:
      - service: notify.noisufnoc_emoh
        data:
          message: "Printer is done!"
          data:
            photo:
              - url: http://octoprint.noisufnoc.net/webcam_pmk3/?action=snapshot
                caption: "Prusa is done!"
            inline_keyboard:
              - 'Toggle Prusa i3 MK3:/prusapower'
